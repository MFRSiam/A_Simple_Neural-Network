//
// Created by M.F.R.Siam on 1/18/2023.
//

#ifndef NEURALNETWORK_PROJECT_HELPER_HPP
#define NEURALNETWORK_PROJECT_HELPER_HPP
#include <armadillo>

//Small Struct For Generated Data
struct GeneratedData{
    arma::mat X;
    arma::vec y;
};

// Get the data Generated By Python
GeneratedData ReadData(){
    arma::mat X(300,2,arma::fill::zeros);
    arma::vec y(300,arma::fill::zeros);
    std::string lineData;
    // As The Exe is in Cmake-build-debug
    // This needs to change in different env
    std::fstream data("../Data/data.txt",std::ios::in);
    bool working_X = true;
    int countD_X=0;
    int countD_Y=0;
    while(std::getline(data,lineData)){
        if(lineData == "Start_X:"){
            working_X = true;
        }else if(lineData == "Start_Y:"){
            working_X = false;
        }else if(working_X){
            lineData.erase(0,3);
            lineData.erase(lineData.size()-1);
            auto it = lineData.find(' ');
            if(it != std::string::npos){
                if(countD_X > 299){
                    std::cout << lineData << "\n";
                    throw "Unexpected Data";
                }
                double numx = std::stod(lineData.substr(0,it));
                double numy = std::stod(lineData.substr(it,lineData.size()-1));
                X(countD_X,0) = numx;
                X(countD_X,1) = numy;
                countD_X++;
            }
        }else {
            if(countD_Y > 300){
                std::cout << lineData << "\n";
                throw "Unexpected Data";
            }
            for(auto arrow:lineData){
                int temp = (int)(arrow - '0');
                if(temp >= 0 && temp <= 9){
                    y(countD_Y) = temp;
                    countD_Y++;
                }
            }
        }
    }
    GeneratedData ret;
    ret.X = X;
    ret.y = y;
    return ret;
}


#endif //NEURALNETWORK_PROJECT_HELPER_HPP
